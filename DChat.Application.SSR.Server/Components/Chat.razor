@using System.Text.RegularExpressions
@using DChat.Application.Shared.ClientServer
@using DChat.Data
@using Microsoft.AspNetCore.Identity
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject UserManager<ChatUser> UserManager

<HeadContent>
    <link rel="stylesheet" href="_content/DChat.Application.Shared.Server/chat.css?v=@BuildVersion" />
    <script src="signalr/dist/browser/signalr.min.js"></script>
    <script src="squirrelly/dist/browser/squirrelly.min.js"></script>
    <script src="jquery/dist/jquery.slim.min.js"></script>
    <script src="Components/Chat.razor.js?v=@BuildVersion"></script>

    <script>
        $(function () {
            new bootstrap.Tooltip(document.getElementById("connection-indicator"));
            new ChatController("@UserId", "@DefaultRoom");
        });
    </script>
</HeadContent>

<SectionContent SectionName="nav-bar-section">
    <div class="flex-grow-1 dropdown dropdown-center mx-2">
        <button id="room-btn" title="Room" class="btn w-100" data-bs-toggle="dropdown" aria-expanded="false"></button>
        <form id="change-room-form" class="dropdown-menu dropdown-menu-center p-4">
            <div class="mb-3">
                <label for="room-name-input" class="form-label">Change room</label>
                <input type="text" class="form-control" id="room-name-input" placeholder="room name">
            </div>
            <button type="submit" id="change-room-btn" class="btn btn-primary">Change</button>
        </form>
    </div>
    <div id="connection-indicator" data-bs-toggle="tooltip" data-bs-placement="bottom" title="" class="me-2">
        <i class="fas fa-signal"></i>
    </div>
</SectionContent>

<div class="message-list-container flex-grow-1 d-flex flex-column-reverse">
    <div class="message-list container"></div>
    <div class="message-sentinel" style="height:1px;flex-shrink:0;"></div>
</div>
<div class="new-message-container">
    <div class="container d-flex p-2">
        <textarea rows="1" class="new-message-area flex-grow-1"></textarea>
        <button class="send-message-btn">
            <i class="fas fa-paper-plane"></i>
        </button>
    </div>
</div>

<script id="message-template" type="text/template">
    <div class="message-header">
        <span class="message-sender">{{it.senderDisplayName}}</span>
        <span class="message-time">{{it.localTime}}</span>
    </div>
    <div class="message-body">
        {{it.html | safe}}
    </div>
</script>

@code
{
    private string? UserId { get; set; }
    private string? DefaultRoom { get; set; }

    [CascadingParameter(Name = "BuildVersion")]
    private string BuildVersion { get; set; } = "default";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        if (authState.User.Identity?.IsAuthenticated != true)
            throw new UnauthorizedAccessException();

        var user = await UserManager.GetUserAsync(authState.User);
        if (user is null)
            throw new UnauthorizedAccessException();

        UserId = user.Id;
        DefaultRoom = user.DefaultRoom ?? "world";
    }
}